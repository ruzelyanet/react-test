{"version":3,"sources":["services/http.tsx","services/login.tsx","components/Login.tsx","views/auth/Auth.tsx","hooks/redux.ts","store/reducers/QuoteSlice.ts","store/reducers/fetchQuotes.ts","components/Exchange.tsx","components/Converter.tsx","store/reducers/HistorySlice.ts","components/Pagination.tsx","components/History.tsx","store/reducers/fetchHistory.ts","views/dash/Dashboard.tsx","views/dash/Index.tsx","store/store.ts","utils/authMiddleWare.ts","App.tsx","index.tsx"],"names":["http","axios","create","baseURL","process","headers","params","a","post","data","postLogin","Login","useState","login","setValue","password","setPassword","errors","setError","serverError","setServerError","history","useHistory","className","Card","Header","Body","Form","Group","Label","Control","value","onChange","e","target","placeholder","type","Button","onClick","isValid","push","match","length","test","validate","action","then","error","result","localStorage","setItem","replace","variant","LoginPage","useAppDispatch","useDispatch","useAppSelector","useSelector","quoteSlice","createSlice","name","initialState","quotes","isLoading","reducers","fetchQuotes","state","fetchQuotesSuccess","payload","fetchQuotesError","updateQuotes","dispatch","actions","res","assets","map","item","flag","message","fields","CheckedFlag","handleClick","Exchange","quoteReducer","useEffect","Table","bordered","hover","size","Spinner","animation","field","i","index","arr","taken","splice","marked","filter","unmarked","unshift","makeMove","asset","quote","startDate","Converter","sum","setSum","coin","set–°oin","currency","setCurrency","selectCoin","setSelectCoin","calc","setCalc","rates","forEach","split","disabled","onKeyPress","key","preventDefault","currentTarget","changeSum","Select","Object","keys","cointChange","currencyChange","histoyrSlice","historyPart","fetchHistory","fetchHistorySuccess","fetchHistoryError","updateHistory","updateHistoryPart","partArray","Pgination","props","page","setPage","totalPages","total","perPage","prevPage","change","clickPrev","nextPage","clickNext","History","historyReducer","deals","sort","t","iDate","Date","finishDate","tDate","startQuote","format","finishQuote","profit","Pagination","updatePartHistory","Dashboard","Tabs","defaultActiveKey","Tab","eventKey","title","DashLayaut","removeItem","rootReducer","combineReducers","authMiddleware","getItem","requireLogin","to","from","next","meta","auth","redirect","location","pathname","store","configureStore","reducer","App","guards","Container","path","exact","component","AuthPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd29cbda.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_API,\n  headers:{                                                                                                                                                                                                                                                                                                                                                                                                                                                                \n    'Content-Type': 'application/json',\n  }   \n});\n\nexport default http;","import http from \"./http\";\n\ninterface ILogin {\n  action: string;\n  login: string;\n  password: string;\n}\n\nasync function postLogin(params: ILogin) {\n  const {data} = await http.post(\"/\", params)\n  return data\n};\n\nexport default postLogin;","import React, {FC, useState} from 'react';\nimport { Button, Container, Form, InputGroup, FormControl, Card } from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom'\nimport postLogin from \"../services/login\"\n\ninterface IErrors {\n  login: string[];\n  password: string[];\n}\n\nconst Login:FC  = () => {\n  const [login, setValue] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n\n  const [errors, setError] = useState<IErrors>({\n    login: [],\n    password:[]\n  })\n\n  const [serverError, setServerError] = useState<string>('')\n\n  let history = useHistory();\n\n  const changeLogin = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value)    \n  }\n\n  const changePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value)    \n  }  \n\n  const validate = ():boolean => {\n    const errors:IErrors = {\n      login: [],\n      password:[]\n    }    \n\n    if (!login) {\n      errors.login.push(\"–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ\")\n    }\n\n    if (!login.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {      \n      errors.login.push(\"–ù–µ –≤–∞–ª–∏–¥–Ω—ã–π Email\")\n    }\n\n    if (!password) {\n      errors.password.push('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ');\n    }\n\n    if (password.length < 6) {      \n      errors.password.push('–ù–µ –º–µ–Ω—å—à–µ 7 —Å–∏–º–≤–æ–ª–æ–≤');\n    }\n           \n    if (!(/^(?=.*\\d)(?=.*[a-zA-Z])[a-zA-Z_0-9]{7,}$/.test(password))) {      \n      errors.password.push('–ù–µ –≤–∞–ª–∏–¥–Ω—ã–π –ø–∞—Ä–æ–ª—å');\n    }\n\n    if (errors.password.length || errors.login.length) {\n      setError(errors);\n      return false;\n    }\n\n    return true;\n  };\n\n  const submit = (e:React.MouseEvent<HTMLButtonElement>) => { \n    setServerError('')\n    setError({\n      login: [],\n      password:[]\n    });    \n\n    const isValid:boolean = validate();    \n\n    if(isValid) {     \n      postLogin({\n        action:'login',\n        login:login,\n        password:password\n      }).then((data:any) => {\n        if(data.error) {\n          setServerError(data.error)\n        } else if(data.result === 'ok'){\n          localStorage.setItem('login', data.result)\n\n          history.replace(\"/home\")\n        }              \n      })    \n    }\n\n  }\n\n  return (        \n    <div className=\"b-login\">\n      <Card className=\"card-primary\">\n        <Card.Header>–í—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</Card.Header>\n        <Card.Body>                              \n            <div className=\"login-form\">\n              <Form>\n                <div className=\"mb-50\">\n                  <Form.Group className=\"form-group pb-3\">\n                    <Form.Label>–õ–æ–≥–∏–Ω</Form.Label>\n                    <Form.Control value={login} onChange={changeLogin} placeholder=\"user@mail.ru\" type=\"text\" className={errors.login[0] && 'is-invalid'}/>\n                    <div className=\"form-input-error text-danger text-end\">\n                      {errors.login[0]}\n                    </div>\n                  </Form.Group>\n                  \n                  <Form.Group className=\"form-group pb-3\">\n                    <Form.Label>–ü–∞—Ä–æ–ª—å</Form.Label>\n                    <Form.Control value={password} onChange={changePassword} placeholder=\"*******\" type=\"password\"  className={errors.password[0] && 'is-invalid'} />\n                    <div className=\"form-input-error text-danger text-end\">\n                      {errors.password[0]}\n                    </div>\n                  </Form.Group>\n                </div>\n\n                <div className=\"text-center\">\n                  <Button onClick={submit} variant=\"primary\" className=\"btn-block\">Submit &#8594;</Button>\n                </div>\n              </Form> \n\n              {\n                serverError && <div className=\"login-form-error text-danger form-input-error text-center\">{serverError}</div>\n              }\n            </div>           \n                \n        </Card.Body>\n      </Card>\n    </div>\n  )\n}\n\nexport default Login","import { FC } from \"react\";\nimport Login from \"../../components/Login\"\n\nconst LoginPage:FC = () => {\n  return (\n    <Login />\n  )\n}\n\nexport default LoginPage","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store/store';\n\n\nexport const  useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector:TypedUseSelectorHook<RootState> = useSelector;","\nimport { IQuote } from '../../models/IQuote'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface QuoteState {\n  quotes: IQuote[];\n  isLoading: boolean;\n  error: string;  \n}\n\nconst initialState: QuoteState = {\n  quotes: [],\n  isLoading: false,\n  error: '',\n}\n\nexport const quoteSlice = createSlice({\n  name: 'quote',\n  initialState,\n  reducers: {\n    fetchQuotes(state) {\n      state.isLoading = true\n    },\n\n    fetchQuotesSuccess(state, action:PayloadAction<IQuote[]>) {\n      state.isLoading = false\n      state.error = ''      \n      state.quotes = action.payload\n    },\n    \n    fetchQuotesError(state, action:PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload\n    },\n\n    updateQuotes(state, action:PayloadAction<IQuote[]>) {\n      state.quotes = action.payload\n    }\n  }\n})\n\nexport default quoteSlice.reducer;","import { quoteSlice } from './QuoteSlice';\nimport { IQuote } from './../../models/IQuote';\nimport { AppDispatch } from './../store';\nimport http from \"../../services/http\";\n\ninterface IQuotesRes {\n  result: string;\n  assets: IQuote[];\n}\n\nexport const fetchQuotes = () => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(quoteSlice.actions.fetchQuotes())\n    \n    const res = await http.post<IQuotesRes>('/', {\n      \"action\": \"quote\"\n    })\n\n    const assets = res.data.assets.map((item) => {\n      item.flag = false\n      return item\n    })      \n\n    dispatch(quoteSlice.actions.fetchQuotesSuccess(assets))\n  } catch (e:any) {\n    dispatch(quoteSlice.actions.fetchQuotesError(e.message))\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport { Table, Spinner} from \"react-bootstrap\"\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux\";\nimport {IQuote} from \"../models/IQuote\"\nimport { fetchQuotes } from \"../store/reducers/fetchQuotes\";\n\nimport {quoteSlice} from '../store/reducers/QuoteSlice'\n\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai';\n\nconst fields:string[] = ['–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞', '–ö–æ—Ç–∏—Ä–æ–≤–∫–∞', '–î–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è']\n\ninterface ICheckedFlag {\n  flag: boolean | undefined;  \n  handleClick: (e:React.MouseEvent<HTMLElement>) => void\n}\n\nconst CheckedFlag:FC<ICheckedFlag> = ({flag, handleClick}) => { \n  return (\n    <div className='checkStar' onClick={handleClick}>\n      {flag ? <AiFillStar /> : <AiOutlineStar />}      \n    </div>\n  )\n}\n\n  \nconst Exchange:FC = () =>  {    \n  let {quotes, isLoading, error} = useAppSelector(state => state.quoteReducer)  \n\n  const dispatch  = useAppDispatch()\n\n  useEffect(() => {    \n    dispatch(fetchQuotes())    \n  }, [])  \n\n  const makeMove = (index: number) => {    \n    const arr:IQuote[] = [...quotes]\n    let taken:IQuote = {\n      ...arr[index]\n    }\n\n    arr.splice(index, 1)\n\n    const marked = arr.filter((item:IQuote) => {\n      return item.flag\n    })\n\n    const unmarked = arr.filter((item:IQuote) => {\n      return !item.flag\n    })\n\n    taken.flag = !taken.flag\n\n    if(taken.flag) {        \n      marked.unshift(taken)\n    } else {\n      unmarked.unshift(taken)\n    }\n\n    const res = [...marked, ...unmarked]\n    \n    dispatch(quoteSlice.actions.updateQuotes(res))  \n  }\n\n  return (    \n    <div className=\"table-exchange h-400 overflow-y-auto\">              \n      <Table bordered hover size=\"sm\" className=\"thead-sticky\">\n        <thead>\n          <tr> \n            <th>\n              <div className=\"w-16\">              \n                {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : ''}              \n              </div>\n            </th>\n            {fields.map((field, i) => {\n              return <th key={i}>{field}</th>\n            })}\n          </tr>        \n        </thead>\n        <tbody>          \n          {quotes.map((field, i) => {\n            return (\n              <tr key={i}>\n                <td>\n                  <CheckedFlag flag={field.flag} handleClick={(e) => makeMove(i)} />\n                </td>\n                <td>{field.asset}</td>                \n                <td>{field.quote}</td>\n                <td>{field.startDate}</td>\n              </tr>)\n          })}\n        </tbody>\n      </Table>\n\n      <div>\n        {error}\n      </div>\n    </div>\n  )\n}\n\nexport default Exchange","import React, { FC, useState, useEffect, FormEvent} from \"react\";\nimport { Form, Button, FormTextProps } from 'react-bootstrap';\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux\";\nimport { fetchQuotes } from \"../store/reducers/fetchQuotes\";\n\nconst Converter: FC = () => {\n  \n  const [sum, setSum] = useState<string>('')\n  const [coin, set–°oin] = useState<string>('')\n  const [currency, setCurrency] = useState<string>('')\n  const [selectCoin, setSelectCoin] = useState<object>({})\n\n  const [calc, setCalc] = useState<number>()\n\n  const dispatch  = useAppDispatch()\n  \n  let {quotes, isLoading, error} = useAppSelector(state => state.quoteReducer) \n\n  useEffect(() => {    \n    dispatch(fetchQuotes())\n  }, [])\n\n  let rates:any = {}\n\n  quotes.forEach((item, index):void => {\n    let [coin, currency] = item.asset.split('/')\n    \n    if(!rates[coin]) {\n      rates[coin] = {}\n    }\n    rates[coin][currency] = item.quote\n  })\n\n  const cointChange = (e:React.FormEvent<HTMLSelectElement>):void => {\n    set–°oin(e.currentTarget.value)        \n    setCurrency(Object.keys(rates[e.currentTarget.value])[0])\n    setSelectCoin(rates[e.currentTarget.value])\n  }\n\n  const currencyChange = (e:React.FormEvent<HTMLSelectElement>):void => {\n    setCurrency(e.currentTarget.value)    \n  }\n\n  const changeSum = (e:React.ChangeEvent<HTMLInputElement>):void => {    \n    setSum(e.currentTarget.value)\n  }\n\n  const calulate = () => {    \n    setCalc(+sum * +rates[coin][currency])\n  }\n  \n  return (\n    <div className=\"tab-card\">\n      <div className=\"tab-card-header\">\n        –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç\n      </div>\n      <div className=\"tab-card-body\">\n        <div className=\"container-fluid\">\n          <div className=\"converter\">\n            <div className=\"converter-form\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-lg-7\">\n                  <div className=\"d-md-flex align-items-end\">\n                    <div className=\"converter-form-control\">\n                      <label>–°—É–º–º–∞</label>\n                      <Form.Control \n                        value={sum} \n                        className=\"form-control-primary\" \n                        disabled={isLoading}                         \n                        onKeyPress={(e) => {if (!/[0-9]/.test(e.key)) {e.preventDefault();}}}\n                        onChange={(e:React.ChangeEvent<HTMLInputElement>) => changeSum(e)} />\n                    </div>\n\n                    <div className=\"d-flex mx-md-3 my-3 my-md-0\">\n                      <div className=\"converter-form-control\">\n                        <Form.Select className=\"form-control-primary\" disabled={isLoading} value={coin} onChange={(e) => cointChange(e)}>                          \n                          {Object.keys(rates).map((key, i) => <option value={key} key={i}>{key}</option>)}\n                        </Form.Select>\n                      </div>\n\n                      <div className=\"converter-form-control ms-2\">\n                        <Form.Select value={currency}  className=\"form-control-primary\" disabled={isLoading} onChange={(e) => currencyChange(e)}>                          \n                          {Object.keys(selectCoin).map((key, i) => <option value={key} key={i}>{key}</option>)}\n                        </Form.Select>\n                      </div>\n                    </div>\n\n                    <div>\n                      <Button variant=\"primary\" disabled={!currency.length || !sum || !coin} onClick={calulate}>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å</Button>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n\n            <div className=\"converter-separator\"></div>\n            \n            <div className=\"converter-res\">\n              { \n                calc ?\n                <div className=\"row justify-content-center\">\n                  <div className=\"col-lg-7\">\n                    <label>–ò—Ç–æ–≥–æ</label>\n                    <div className=\"converter-res-num\">{calc}</div>\n                  </div>\n                </div> : ''\n              }              \n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Converter","import { IHistory } from './../../models/IHistory';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface HistoryState {\n  historyPart: IHistory[];\n  history: IHistory[];\n  isLoading: boolean;\n  error: string;  \n}\n\nconst initialState: HistoryState = {\n  historyPart: [],\n  history: [],\n  isLoading: false,\n  error: '',\n}\n\nexport const histoyrSlice = createSlice({\n  name: 'history',\n  initialState,\n\n  reducers: {\n    fetchHistory(state) {\n      state.isLoading = true\n    },\n\n    fetchHistorySuccess(state, action:PayloadAction<IHistory[]>) {\n      state.isLoading = false\n      state.error = ''\n      state.history = action.payload\n    },\n    \n    fetchHistoryError(state, action:PayloadAction<string>) {\n      state.isLoading = false;\n      state.error = action.payload\n    },\n\n    updateHistory(state, action:PayloadAction<IHistory[]>) {\n      state.history = action.payload\n    },\n\n    updateHistoryPart(state, action:PayloadAction<number>) {      \n      state.historyPart = []\n      const partArray:IHistory[] = []\n\n      const start = action.payload === 1 ? 1 : +`${action.payload - 1}0`;\n      const end = +`${action.payload}0`\n\n      for(let i = action.payload; i <= +`${action.payload}0`; i++) {              \n        partArray.push(state.history[i])\n      }\n\n      state.historyPart = partArray\n    }\n\n  }\n})\n\nexport default histoyrSlice.reducer;","import React, { FC, useEffect, useState } from \"react\";\nimport {BsArrowLeft, BsArrowRight} from \"react-icons/bs\";\nimport { createLanguageService } from \"typescript\";\n\ninterface IPaginationProps {\n  total: number;\n  perPage: number;\n  change:(page:number) => void;\n}\n\nconst Pgination:FC<IPaginationProps> = (props:IPaginationProps) =>  {\n  const [page, setPage] = useState(1)\n\n  //props.perPage\n  //props.total\n  //props.change\n\n  const totalPages = () => {\n    return (props.total / props.perPage) - 1\n  }\n\n  const clickPrev = () => {\n    if(page > 1) {\n      const prevPage = page - 1\n      setPage(prevPage)\n      props.change(prevPage)\n    }\n  }\n\n  const clickNext = () => {\n    if(page < totalPages()) {\n      const nextPage = page + 1\n      setPage(nextPage)\n      props.change(nextPage)\n    }\n  }\n\n  return(\n    <div className=\"pagination justify-content-center align-items-center\">\n      <button className=\"pagination-btn pagination-btn-prev\" onClick={(e) => clickPrev()} disabled={page == 1}>\n        <BsArrowLeft />\n      </button>\n\n      <div className=\"pagination-pages d-flex alig-items-center\">\n        <div className=\"pagination-active-page\">{page}</div>\n        <div className=\"pagination-pages-separator\">/</div>\n        <div className=\"pagination-pages-total\">{totalPages()}</div>\n      </div>\n\n      <button className=\"pagination-btn pagination-btn-next\" onClick={(e) => clickNext()} disabled={page == totalPages()}>\n        <BsArrowRight />\n      </button>\n    </div>\n  )\n}\n\nexport default Pgination","import React, { FC, useEffect, useState } from \"react\";\nimport { Table, Spinner} from \"react-bootstrap\"\nimport { useAppDispatch, useAppSelector } from \"../hooks/redux\";\nimport {IHistory} from '../models/IHistory';\nimport {fetchHistory} from '../store/reducers/fetchHistory'\nimport {histoyrSlice} from '../store/reducers/HistorySlice'\nimport Moment from 'react-moment';\n\nimport Pagination from './Pagination'\n\n\n\nconst fields:string[] = ['–ê–∫—Ç–∏–≤', '–ù–∞—á–∞–ª–æ', '–ö–æ—Ç–∏—Ä–æ–≤–∫–∞', '–ö–æ–Ω–µ—Ü', '–ö–æ—Ç–∏—Ä–æ–≤–∫–∞', '–ü—Ä–∏–±—ã–ª—å']\n  \nconst History:FC = () =>  {\n  let {history, historyPart, isLoading, error} = useAppSelector(state => state.historyReducer)  \n\n  const dispatch  = useAppDispatch()  \n\n  useEffect(() => {\n    dispatch(fetchHistory())\n  }, [])\n\n  const updatePartHistory = (page:number) => {\n    dispatch(histoyrSlice.actions.updateHistoryPart(page))    \n  } \n  \n  const profitNumb = (profit:string) => {\n    return +profit > 0 ? `+${profit}` : profit;\n  }\n\n  return (    \n    <div className=\"h-400 history-table\">\n      <Table bordered hover size=\"sm\" className=\"thead-sticky\">\n        <thead>\n          <tr>             \n            {fields.map((field, i) => {\n              return <th key={i}>{field}</th>\n            })}\n          </tr>        \n        </thead>\n\n        <tbody>\n          {historyPart.map((field, i) => {\n            return (\n              <tr key={i}>                \n                <td>{field.asset}</td>\n\n                <td>\n                  {field.startQuote}                  \n                </td>\n\n                <td>\n                  <Moment format=\"HH:MM YYYY.MM.DD\">\n                    {field.startDate}  \n                  </Moment>\n                </td>\n\n                <td>{field.finishQuote}</td>\n                <td>\n                  <Moment format=\"HH:MM YYYY.MM.DD\">\n                    {field.finishDate}\n                  </Moment>                  \n                </td>\n                <td className=\"text-end\">\n                  {profitNumb(field.profit)}\n                </td>\n              </tr>)\n          })}            \n        </tbody>     \n      </Table> \n\n      <Pagination total={history.length} perPage={10} change={(page) => updatePartHistory(page)}/>\n    </div>\n  )\n}\n\nexport default History","import { histoyrSlice } from './HistorySlice';\nimport { IHistory } from '../../models/IHistory';\nimport { AppDispatch } from './../store';\nimport http from \"../../services/http\";\n\ninterface IHistoryRes {\n  result: string;\n  deals: IHistory[];\n}\n\nexport const fetchHistory = () => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(histoyrSlice.actions.fetchHistory())\n    \n    const res = await http.post<IHistoryRes>('/', {\n      \"action\": \"history\"\n    })\n\n    const {deals} = res.data\n\n    deals.sort((i, t) => {\n      const iDate = +new Date(i.finishDate)\n      const tDate = +new Date(t.finishDate)\n  \n      if (iDate > tDate) {\n        return -1;\n      }\n      if (iDate < tDate) {\n        return 1;\n      }\n      return 0;\n    })\n\n\n    dispatch(histoyrSlice.actions.fetchHistorySuccess(deals))\n    dispatch(histoyrSlice.actions.updateHistoryPart(1))\n  } catch (e:any) {\n    dispatch(histoyrSlice.actions.fetchHistoryError(e.message))\n  }\n}\n","import { FC } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Exchange from '../../components/Exchange'\nimport Converter from '../../components/Converter'\nimport History from '../../components/History'\n\nconst Dashboard:FC  = () => {\n  return (\n    <div className=\"b-dashboard\">    \n      <Tabs defaultActiveKey=\"exchange\">\n        <Tab eventKey=\"exchange\" title=\"–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç\">\n          <Exchange />\n        </Tab>\n        <Tab eventKey=\"converter \" title=\"–ö–æ–Ω–≤–µ—Ä—Ç–æ—Ä\">\n          <Converter />\n        </Tab>\n        <Tab eventKey=\"history\" title=\"–ò—Å—Ç–æ—Ä–∏—è\">\n          <History />\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default Dashboard","import {FC} from 'react'\nimport Dashboard from './Dashboard'\nimport { Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\n\nconst DashLayaut:FC = () => {\n  let history = useHistory();\n\n  const logOut = () => {\n    localStorage.removeItem('login')\n\n    history.replace(\"/login\")\n  }\n\n  return (\n    <div className=\"dashboard-layaut d-lg-flex justify-content-lg-center\">\n      <div>\n        <div className=\"text-end p-4\">\n          <Button variant=\"secondary\" onClick={logOut}>–í—ã–π—Ç–∏</Button>\n        </div>\n        <Dashboard />\n      </div>\n    </div>\n  )\n}\n\nexport default DashLayaut","import { combineReducers, configureStore } from \"@reduxjs/toolkit\"\nimport quoteReducer from './reducers/QuoteSlice'\nimport historyReducer from './reducers/HistorySlice'\n\nconst rootReducer = combineReducers({\n  quoteReducer,\n  historyReducer\n})\n\nexport const setupStore = () => {\n  return configureStore({\n    reducer: rootReducer\n  })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']","const authMiddleware:Function = ():boolean => { \n  const login = localStorage.getItem('login')\n\n  return !!login  \n}\n\nexport default authMiddleware","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/App.scss';\nimport { BrowserRouter, Route, Switch, Redirect, Link } from 'react-router-dom'\nimport AuthPage from './views/auth/Auth'\nimport Dashboard from './views/dash/Index'\nimport {Container} from 'react-bootstrap'\nimport { Provider } from 'react-redux';\nimport { setupStore } from './store/store';\n\nimport { GuardProvider, GuardedRoute } from 'react-router-guards';\n\nimport authMiddleware from './utils/authMiddleWare'\n\nconst requireLogin = (to:any, from:any, next:any) => {\n  if (to.meta.auth) {\n    if (authMiddleware()) {\n      next();\n    }\n    next.redirect('/login');\n  } else {\n    if(to.location.pathname === \"/login\" && authMiddleware()) {      \n      next.redirect('/home');\n    }\n   \n    next();\n  }\n};\n\nconst store = setupStore()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>                     \n        <GuardProvider guards={[requireLogin]}>\n          <div className=\"App\">\n            <Container>\n              <Switch>                \n                \n                <GuardedRoute path='/login' exact component={AuthPage} />\n                <GuardedRoute path='/' exact component={Dashboard} meta={{ auth: true }} />\n                <GuardedRoute path='/home' exact component={Dashboard} meta={{ auth: true }} />\n              </Switch>\n            </Container>\n          </div>\n        </GuardProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css'\nimport './assets/ui-kit/ui-kit.scss'\n\n\nReactDOM.render(  \n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}